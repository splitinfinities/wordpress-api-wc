/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


declare global {
  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }
}



import {
  WordpressApi as WordpressApi
} from './components/wordpress-api/wordpress-api';

declare global {
  interface HTMLWordpressApiElement extends WordpressApi, HTMLStencilElement {
  }
  var HTMLWordpressApiElement: {
    prototype: HTMLWordpressApiElement;
    new (): HTMLWordpressApiElement;
  };
  interface HTMLElementTagNameMap {
    "wordpress-api": HTMLWordpressApiElement;
  }
  interface ElementTagNameMap {
    "wordpress-api": HTMLWordpressApiElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "wordpress-api": JSXElements.WordpressApiAttributes;
    }
  }
  namespace JSXElements {
    export interface WordpressApiAttributes extends HTMLAttributes {
      api?: any;
      baseUrl?: string;
      component?: string;
      componentProps?: { [key: string]: any };
      name?: string;
      nonce?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
